<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="5" passed="4" failed="1" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2022-10-07T16:42:20 COT" name="Suite" finished-at="2022-10-07T16:42:56 COT" duration-ms="36408">
    <groups>
    </groups>
    <test started-at="2022-10-07T16:42:20 COT" name="Test" finished-at="2022-10-07T16:42:56 COT" duration-ms="36408">
      <class name="Run.Run">
        <test-method is-config="true" signature="beforeClass(java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:Run.Run@4229bb3f]" started-at="2022-10-07T16:42:20 COT" name="beforeClass" finished-at="2022-10-07T16:42:21 COT" duration-ms="1278" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[./imagenes/mercado-libre-logo.png]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[./imagenes/tools-qa.png]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[./imagenes/logo.png]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method signature="testToolsQAAlerts(java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:1, instance:Run.Run@4229bb3f]" started-at="2022-10-07T16:42:22 COT" name="testToolsQAAlerts" data-provider="toolsQAAl" finished-at="2022-10-07T16:42:22 COT" duration-ms="3" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[https://demoqa.com/]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[no]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Si]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[CamiloMartinez]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testToolsQAAlerts -->
        <test-method signature="pruebaInicialTestNG(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:2, instance:Run.Run@4229bb3f]" started-at="2022-10-07T16:42:22 COT" name="pruebaInicialTestNG" data-provider="busqueda" finished-at="2022-10-07T16:42:22 COT" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[celular]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[vvv@gmail.com]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[https://www.mercadolibre.com.co]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[no]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[Si]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- pruebaInicialTestNG -->
        <test-method signature="testToolsQAWidgest(java.lang.String,java.lang.String,java.lang.String)[pri:3, instance:Run.Run@4229bb3f]" started-at="2022-10-07T16:42:22 COT" name="testToolsQAWidgest" data-provider="toolsQAWi" finished-at="2022-10-07T16:42:22 COT" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[https://demoqa.com/]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[no]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Si]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testToolsQAWidgest -->
        <test-method signature="pruebaInicialTestNG2(java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:4, instance:Run.Run@4229bb3f]" started-at="2022-10-07T16:42:22 COT" name="pruebaInicialTestNG2" data-provider="crearCuenta" finished-at="2022-10-07T16:42:22 COT" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[https://www.mercadolibre.com.co]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[vvv@gmail.com]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[no]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Si]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- pruebaInicialTestNG2 -->
        <test-method signature="testmercury(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:5, instance:Run.Run@4229bb3f]" started-at="2022-10-07T16:42:22 COT" name="testmercury" data-provider="mercury" finished-at="2022-10-07T16:42:56 COT" duration-ms="34333" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[https://demo.guru99.com/selenium/newtours/index.php]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Camilo]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Martinez]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[3132285910]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[Camilo@hotmail.com]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[Cll falsa 1 2 3 ]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[Bogota]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[Bogota]]>
              </value>
            </param>
            <param index="8">
              <value>
                <![CDATA[1111]]>
              </value>
            </param>
            <param index="9">
              <value>
                <![CDATA[SOMALIA]]>
              </value>
            </param>
            <param index="10">
              <value>
                <![CDATA[Camilom]]>
              </value>
            </param>
            <param index="11">
              <value>
                <![CDATA[123456milo]]>
              </value>
            </param>
            <param index="12">
              <value>
                <![CDATA[123456milo]]>
              </value>
            </param>
            <param index="13">
              <value>
                <![CDATA[Si]]>
              </value>
            </param>
            <param index="14">
              <value>
                <![CDATA[Si]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [123456miloo] but found [123456milo]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [123456miloo] but found [123456milo]
at org.testng.Assert.fail(Assert.java:99)
at org.testng.Assert.failNotEquals(Assert.java:1037)
at org.testng.Assert.assertEqualsImpl(Assert.java:140)
at org.testng.Assert.assertEquals(Assert.java:122)
at org.testng.Assert.assertEquals(Assert.java:629)
at org.testng.Assert.assertEquals(Assert.java:639)
at Run.Run.testmercury(Run.java:354)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testmercury -->
        <test-method is-config="true" signature="afterClass()[pri:0, instance:Run.Run@4229bb3f]" started-at="2022-10-07T16:42:56 COT" name="afterClass" finished-at="2022-10-07T16:42:56 COT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
      </class> <!-- Run.Run -->
    </test> <!-- Test -->
  </suite> <!-- Suite -->
</testng-results>
